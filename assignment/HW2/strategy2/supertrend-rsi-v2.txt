//@version=5
strategy("Supertrend-RSI",overlay=true)

// Backtesting time range
start_date = input.time(defval = timestamp("01 Jan 2023 00:00 +0000"), title = "From")
end_date = input.time(defval = timestamp("01 Mar 2023 00:00 +0000"), title = "Thru")

// rsi config
RSI_level = input.int(title="RSI-Level",defval=14,minval=1,maxval=22,step=1)
OverBought = input.int(title="OverBought",defval=70,minval=1,maxval=100,step=1)
OverSold = input.int(title="OverSold",defval=30,minval=1,maxval=100,step=1)
RSI = ta.rsi(close,RSI_level)


//supertrend config
ATR = input.int(title="ATR Length",defval=10,minval=1,maxval=100,step=1)
Factor = input.float(title="Factor",defval=3,minval=1,maxval=100,step=1)
[supertrend,direction] = ta.supertrend(Factor,ATR)


// Time frame config
RequestSecurityNRP(_tf, _exp, _barmerge) =>
    request.security(syminfo.tickerid, _tf, _exp[barstate.isrealtime ? 1 : 0], _barmerge)[barstate.isrealtime ? 0 : 1]


Timeframe_4h = input.timeframe("240",  "4H timeframe")
Timeframe_daily = input.timeframe("D",  "Daily timeframe")


// calling timeframes on rsi and macd
RSI_4h = RequestSecurityNRP(Timeframe_4h, RSI, barmerge.gaps_on)
RSI_D = RequestSecurityNRP(Timeframe_daily, RSI, barmerge.gaps_on)
supertrend_TF1 = RequestSecurityNRP(Timeframe_4h, supertrend, barmerge.gaps_on)
supertrend_TF2 = RequestSecurityNRP(Timeframe_daily, supertrend, barmerge.gaps_on)


//Entry conditions
buyEntry = ta.crossover(RSI_4h,OverBought) and supertrend_TF1 > 0
sellEntry = ta.crossunder(RSI_4h,OverSold) and supertrend_TF2 < 0
buyEntry2 = ta.crossunder(RSI_D,OverBought) and supertrend_TF2 > 0
sellEntry2 = ta.crossunder(RSI_D,OverSold) and supertrend_TF2 < 0


// Exit condition
buyExit = ta.barssince(close > supertrend_TF1) == 1 or ta.barssince(close > supertrend_TF2) == 1
sellExit = ta.barssince(close < supertrend_TF1) == 1 or ta.barssince(close < supertrend_TF2) == 1
// buyExit = ta.crossunder(close,supertrend_TF1) or ta.crossunder(close,supertrend_TF2)
// sellExit = ta.crossover(close,supertrend_TF1) or ta.crossover(close,supertrend_TF2)

if (buyEntry or buyEntry2) and  time >= start_date and time <= end_date
    strategy.entry("long",strategy.long)

if (sellEntry or sellEntry2) and  time >= start_date and time <= end_date
    strategy.entry("short",strategy.short)

if buyExit
    strategy.close("long")

if sellExit
    strategy.close("short")


// Plot
plotshape(buyEntry,color = color.new(color.green,0),text = "BUY",textcolor = color.new(color.white,0),style = shape.arrowup)
plotshape(sellEntry,color = color.new(color.red,0),text = "SELL",textcolor = color.new(color.white,0),style = shape.arrowdown)

